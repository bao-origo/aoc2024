#!/usr/bin/env ruby

pattern1 = <<'EOF'
M.S
.A.
M.S
EOF
$pattern1 = pattern1.split("\n")

pattern2 = <<'EOF'
S.S
.A.
M.M
EOF
$pattern2 = pattern2.split("\n")

pattern3 = <<'EOF'
S.M
.A.
S.M
EOF
$pattern3 = pattern3.split("\n")

pattern4 = <<'EOF'
M.M
.A.
S.S
EOF
$pattern4 = pattern4.split("\n")

def match(matrix, i, j)
  # Check if the pattern fits within the matrix bounds
  return false if i + 2 >= matrix.size || j + 2 >= matrix[0].size

  # Check against each pattern
  patterns = [$pattern1, $pattern2, $pattern3, $pattern4]
  patterns.each do |pattern|
    ok = true
    for y in 0...3
      for x in 0...3
        if pattern[x][y] == '.'
          next
        end
        if matrix[i + x][j + y] != pattern[x][y]
          ok = false
          break
        end
      end
      break unless ok
    end
    return true if ok
  end
  return false
end

def matches(matrix, rows, cols)
  count = 0
  for j in 0...(rows - 2)  # Adjusted to rows - 2
    for i in 0...(cols - 2)  # Adjusted to cols - 2
      if match(matrix, i, j)
        count += 1
      end
    end
  end
  return count
end

require_relative 'aoc'
input = AOC.read(4)

matrix = input.split("\n")

rows = matrix.size
cols = matrix[0].size

puts matches(matrix, rows, cols)
