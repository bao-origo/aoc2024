#!/usr/bin/env ruby
require_relative 'aoc'
input = AOC.read(6)

# Map of lab.
$map = input.split("\n")
$rows = $map.size
$columns = $map[0].size

# Guard's movements. A movement is when the guard moves from one position to a new position.
$movements = 0 # all movements including the guard's movement out of bounds will be equal to distincts positions, including start position, in the map.

# Guard's position.
catch :found do
  for $row in 0...$rows
    for $column in 0...$columns
      throw :found if $map[$row][$column] == '^'
    end
  end
end

# Guard's direction, which begins at facing up.
$direction_row = -1
$direction_column = 0

# Is guard in-bound of map?
def in_bounds?(row, column)
  return 0 < row || 0 < column || row <= $rows || column <= $columns
end

# Is guard about the hit the wall?
def about_to_hit_wall?
  new_row, new_column = $row + $direction_row, $column + $direction_column
  return false if !in_bounds?(new_row, new_column)
  return $map[new_row][new_column] == '#'
end

# Move guard once in the current direction.
def move_guard
  $row += $direction_row
  $column += $direction_column

  $movements += 1 # The guard has moved to a new position, which counts as a movement.
end

# Turn the direction of the guard right.
def turn_right
  raise "TODO: Turn right."
end

# The guard will start in-bounds.
while in_bounds?($row, $column)
  while about_to_hit_wall?
    turn_right
  end
  move_guard
end

puts "TODO: #{$movements}"
