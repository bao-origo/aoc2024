#!/usr/bin/env ruby
#require_relative 'aoc'
#input = AOC.read(9).strip
input = "2333133121414131402"

$files = []
j = 0
input.each_char.with_index do |n, i|
  if i.even? # n block file.
    $files << Array.new(n.to_i) { j.to_s }
    j += 1
  else # free block space.
    next if n.to_i == 0
    $files << Array.new(n.to_i) { '.' }
  end
end

def debugp
  $files.flatten.each { |c| print c }
  print "\n"
end

count = 0
catch :done do
  loop do
    p $files
    debugp
    #exit if count == 10
    catch :retry do
      ($files.length-1).downto(0).each do |j|
        file_j = $files[j]
        next if file_j[0] == '.'
        (0...j).each do |i|
          file_i = $files[i]
          next if file_i[0] != '.' or file_i.length < file_j.length
          file_j.each_with_index do |value, index|
            file_i[index] = value
          end
          dot_index = file_i.index(".")
          file_j.fill('.')
          throw :retry if dot_index.nil?
          $files[i] = file_i[0...dot_index]
          $files.insert(i+1, file_i[dot_index..dot_index])
          throw :retry
        end
        throw :done if j == 0
      end
    end
    count += 1
  end
end

puts ($files.flatten.each.with_index.reduce(0) { |result, (c, i)| c == '.' ? result : (result + (i * c.to_i)) })
