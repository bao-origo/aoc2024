#!/usr/bin/env ruby
require_relative 'aoc'
input = AOC.read(5)

$rules = input.split("\n\n")[0].split("\n").map{|rule| rule.split("|")}
updates = input.split("\n\n")[1].split("\n").map{|update| update.split(",")}

# Get middle page index.
def middle_index(update)
  (update.length / 2).floor
end

# Get middle page number.
def middle_number(update)
  update[middle_index(update)]
end

# Check if the update is in the correct order.
def correct?(update)
  $rules.each do |rule|
    # Check if both numbers in the rule exists in the update.
    next unless rule.all? {|num| update.include?(num)}

    # Check if the update obeys the rule.
    ok = false
    _p = 0
    update.each do |page|
      if page == rule[_p]
        _p += 1
        ok = true if _p == 2
      end
    end
    return false unless ok
  end
  return true
end

sum = 0
updates.each do |update|
  if correct?(update)
    sum += middle_number(update).to_i
  end
end

puts sum
